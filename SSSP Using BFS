class graph:
    def __init__(self,gdict=None):
        if gdict is None:
            gdict={}
            
        self.gdict=gdict    

    def bfs(self,start,end):
        queue=[]
        queue.append([start])
        while queue:
            path=queue.pop(0)
            node=path[-1]
            if node==end:
                return path
            for neighbor in self.gdict.get(node,[]):
                newpath=list(path)
                newpath.append(neighbor)
                queue.append(newpath)
                
cd = {
  'a' : ['b','c'],
  'b' : ['d','g'],
  'c' : ['d','e'],
  'd' : ['f'],
  'e' : ['f'],
  'g' : ['f'],
}

g=graph(cd)
print(g.bfs('a','f'))

