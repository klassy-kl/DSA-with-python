class bstnode:
    def __init__(self,data):
        self.data=data
        self.leftchild=None
        self.rightchild=None
        
def InsertNode(rootnode,nodevalue):
    if not rootnode.data:
        rootnode.data=nodevalue
    elif nodevalue<=rootnode.data:
        if rootnode.leftchild is None:
            rootnode.leftchild=bstnode(nodevalue)
        else:
            InsertNode(rootnode.leftchild,nodevalue)
    else:
        if rootnode.rightchild is None:
            rootnode.rightchild=bstnode(nodevalue)
        else:
            InsertNode(rootnode.rightchild,nodevalue)
        

def SearchNode(rootnode,nodevalue):
    if rootnode.data==nodevalue:
        return 'element found'
    elif nodevalue<=rootnode.data:
        if rootnode.leftchild is None:
            return 'element not found'
        else:
            SearchNode(rootnode.leftchild,nodevalue)
    else:
        if rootnode.rightchild is None:
            return 'element not found'
        else:
            SearchNode(rootnode.rightchild,nodevalue)
        return 'found'

     
newbst=bstnode(None) 
InsertNode(newbst,70)
print(SearchNode(newbst,70))
